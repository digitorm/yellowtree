(async()=>{const{updateURLParams:i,historyPush:e,parseHTML:n}=await import(window.theme.modules.utils),s=t=>t.replace(/["\\]/g,"\\$&"),t=t=>JSON.parse(t.textContent);var a=await import(window.theme.modules.baseComponent);customElements.define("product-variant-selector",class extends a.default{elements={variantsJSON:"[data-variants-json]",optionsJSON:"[data-options-with-values]"};render(){this.cache={},this.isProductPage=this.hasAttribute("product-page"),this.variantsData=t(this.$variantsJSON),this.optionsData=t(this.$optionsJSON),this._getDefaultVariant(),this._checkUnavailable(),this.addEventListener("change",this._variantChangeHandler.bind(this)),this.on("qtyStatusUpdate",(t,a)=>{this.cache[+a.variantId]=a.html.outerHTML},!1),this._setInititalCache()}_getDefaultVariant(){this.variant=this.variantsData.find(t=>t.id===+this.getAttribute("current-variant-id"))}_setInititalCache(){var t=this.getParentSection();this.cache[this.variant.id]=t.outerHTML}_checkUnavailable(){this.optionsData.map((i,e)=>{let n=[...this.variant.options];i.values.map(t=>{n[e]=t;var a=this._findVariantByOptions(n);this._toggleOption(i.name,t,!a)})})}_toggleOption(t,a,i){const e=this.querySelector(`[name="${s(t)}"][value="${s(a)}"`);i?e.setAttribute("data-unavailable",""):e.removeAttribute("data-unavailable")}_variantChangeHandler(t){var a;t.detail?.synthetic||(this._selectVariantByOption(t.target),a=this.isProductPage?this.sectionId:null,{queryURL:t,currentURL:a}=i({variant:this.variant.id},a,window.location.origin+this.getAttribute("product-url")),this.isProductPage&&e(a),this._checkUnavailable(),(a=this.cache[this.variant.id])?this.forwardEvent("variantChange",{html:n(a),variant:this.variant}):this._fetchPageWithVariant(t,t=>{this.cache[this.variant.id]=t,this.forwardEvent("variantChange",{html:n(t),variant:this.variant})}))}_selectVariantByOption(a){let i=this.optionsData.findIndex(t=>t.name===a.name);if(a.hasAttribute("data-unavailable"))this.variant=this.variantsData.find(t=>t.options[i]===a.value),this._toogleInputs(a);else{let t=[...this.variant.options];t[i]=a.value,this.variant=this._findVariantByOptions(t)}}_toogleInputs(e){this.variant.options.map((t,a)=>{if(t!==e.value){const i=this.querySelector(`input[value="${s(t)}"][name="${s(this.optionsData[a].name)}"]`);i.checked=!0,i.dispatchEvent(new CustomEvent("change",{bubbles:!0,detail:{synthetic:!0}}))}})}_findVariantByOptions(a){return this.variantsData.find(t=>((t,a)=>t.toString()===a.toString())(t.options,a))}_updateSwatchLable(t){t.closest("product-variant-swatch").querySelector("[data-swatch-value]").textContent=t.value}_fetchPageWithVariant(t,a){return this.forwardEvent("variantLoading"),fetch(t).then(t=>t.text()).then(t=>{a(t)})}}),customElements.define("product-option-picker",class extends a.default{elements={value:"[data-option-value]"};render(){this.addEventListener("change",t=>{this.$value&&(this.$value.innerText=t.target.value)})}})})();